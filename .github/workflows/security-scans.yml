name: Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  security-scans:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # GitLeaks Scan
    - name: GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        report-format: text
        report-path: gitleaks-report.txt
    
    # Upload GitLeaks Results
    - name: Upload GitLeaks Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-results
        path: gitleaks-report.txt
        retention-days: 7

    # SonarCloud Scan
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=tejsinghani-mohit
          -Dsonar.projectKey=tejsinghani-mohit_vscode-openai
          -Dsonar.sources=src
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

    # Generate SonarCloud Text Report
    - name: Generate SonarCloud Report
      if: always()
      run: |
        echo "SonarCloud Analysis Results" > sonar-report.txt
        echo "--------------------------------" >> sonar-report.txt
        if [ -d ".scannerwork" ]; then
          find .scannerwork -type f -name "*.txt" -o -name "*.json" | while read file; do
            echo "Contents of $file:" >> sonar-report.txt
            echo "-------------------" >> sonar-report.txt
            cat "$file" >> sonar-report.txt
            echo -e "\n\n" >> sonar-report.txt
          done
        else
          echo "No .scannerwork directory found" >> sonar-report.txt
        fi

    # Upload SonarCloud Results
    - name: Upload SonarCloud Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sonarcloud-scan-results
        path: |
          .scannerwork/
          sonar-report.txt
        retention-days: 7

    # Trivy File System Scan
    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        output: 'trivy-results.txt'

    # Upload Trivy Results
    - name: Upload Trivy Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trivy-results
        path: trivy-results.txt
        retention-days: 7
